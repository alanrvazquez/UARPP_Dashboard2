---
title: "Cultivar Data 2019-2023"
author: ""
logo: "images/UARPP-LogoV2.png"
format: 
  dashboard:
    orientation: rows
    theme: custom.scss
server: shiny
---

```{r}
#| context: setup
#| echo: false
#| output: false

# Load libraries.
library(tidyverse)
library(readxl)
library(ggplot2)
library(ggformula)
library(factoextra) # For cluster analysis

################################################################################
# Read data
################################################################################
rice.data = read_excel("data/cultivar_data_2019-2023.xlsx")

################################################################################
# Preprocessing
################################################################################

rice.data = rice.data %>%  mutate_at(c("Year", "Cultivar", "PurelineHybrid", "Grain Size"), as.factor)

select_variables = tbl_vars(rice.data)[c(5:12, 63:67)]
subset_rice.data = rice.data %>% select(all_of(select_variables))

time_variables = c("MRY", "HRY", "SLC", "NIR_ColorL", "NIR_Colora", "NIR_Colorb", "NIR_ProtCont", "HCM_L", "HCM_a", "HCM_b")
var_names = c(tbl_vars(subset_rice.data), time_variables)
 
# Data for clustering

#grouping.data = rice.data %>% filter(Year == 2022) %>% select(c("Cultivar","Peak","Trough", "Breakdown", "Setback", "Final"))
grouping.data = rice.data %>% select(c("Peak","Trough", "Breakdown", "Setback", "Final"))

################################################################################
# Plot theme
################################################################################

ytext <- 18
xtext <- ytext
y.axis.title <- 20
x.axis.title <- y.axis.title
legtext <- 18

uarpp_colors <- c("#D9516D", "#C49A6C", "#000000")

plot.theme <- theme_minimal() +
  theme(
    text = element_text(family = "Georgia", color = "#000000"),  # Font and text color
    panel.background = element_rect(fill = "#ffffff"),  # Background color
    plot.background = element_rect(fill = "#ffffff"),
    legend.background = element_rect(fill = "#ffffff"),
    legend.position = "top",
    axis.title = element_text(size = 20, color = "#A0192E", face = "bold"),  # Red axis labels
    axis.text = element_text(size = 18, color = "#000000"),  # Black axis text
    legend.text = element_text(size = 18, color = "#000000"),
    legend.title = element_text(size = 20, color = "#A0192E", face = "bold")
  )


```


# {.sidebar}

```{r}
#| title: Inputs
#selectInput("sampleSize", "Number of subjects:", 
#            unique(summary_results$n))
#radioButtons("year", "Year:", 
#            c("All", "2019", "2020", "2021", "2022", "2023"))

#varSelectInput("variable", "Quality Parameter:", subset_rice.data)
selectInput("variable", "Quality Parameter:", var_names)
sliderInput("k", "Groups:", min = 2, max = 5, value = 3)
```

```{r}
#| context: server
#| echo: false
#| output: false

dataset = reactive({
    if (input$variable %in% time_variables){
        my.data = rice.data %>% select(starts_with(input$variable))
        my.data = my.data %>% rename_with(~str_remove(., paste(input$variable, '_', sep = '')))
        my.data = my.data %>% rename_with(~str_remove(., 's'))
        var_sel = my.data %>%  colnames()
        my.data = my.data %>% mutate("Year" = rice.data$Year, "PurelineHybrid" = rice.data$PurelineHybrid,
                                     "Grain Size" = rice.data$`Grain Size`)
        my.data = my.data %>% pivot_longer(cols = all_of(var_sel), names_to = "Time", values_to = input$variable)
        my.data = my.data %>% mutate_at("Time", as.numeric)  
    } else {
      my.data = subset_rice.data %>% select(input$variable)    
    }
    
  my.data
})

# Enhanced k-means clustering
#res.hclust = reactive({
#  eclust(my.data[,c("PeakTime","PastingTemp")], "hclust", k = input$k)
#  })


```

# Introduction

## Welcome

**Welcome to the Rice Processing Program Dashboard**

The mission of the Arkansas Rice Processing Program is to conduct both basic and applied research aimed at improving the efficiency of current processing operations and generating foundational knowledge for the development of new rice products and processes. Ultimately, the program seeks to enhance the quality and value of rice and rice-based products. A key focus is understanding the variation in physicochemical attributes that influence milling performance and help Arkansas rice cultivars better meet market and consumer demands.
 
Our research focuses on a comprehensive assessment of the physicochemical variation among Arkansas rice cultivars, with particular emphasis on traits that influence milling performance and functionality in product development. We examine a broad set of characteristics, including grain dimensions, milling yield, pasting properties, amylose content, gelatinization temperature, and hydration behavior, among others.

This interactive dashboard showcases the data collected over a five-year study, during which all rice cultivars were grown under uniform soil and environmental conditions. It offers dynamic visualizations that reveal how various rice quality metrics have changed over time. 
 
Our goal is to support breeding programs in developing cultivars with enhanced milling and functional traits, and to assist processors and product developers in selecting the most suitable cultivars for specific end-use applications in rice-based products.


## Explore the data

**Explore the Data**

Use the navigation menu on the left to explore various sections of the dashboard, including:

- Cultivar Comparison: Compare milling performance and physicochemical traits across different rice cultivars
- Attribute Analysis: Dive into detailed data on individual quality attributes, such as amylose content and gelatinization temperature
- Correlation Analysis: Discover relationships between attributes and identify key factors influencing rice quality

We hope this interactive platform enhances understanding of the complex factors driving rice processing and qualityâ€”ultimately supporting breeders, producers, processors, and consumers in making informed decisions.


# Overall

Distribution of the rice quality parameters.

## Comparisons

```{r}
#| context: server

output$Histogram <- renderPlot({
  if (input$variable %in% time_variables){
    my.plot = ggplot(dataset(), aes(y = .data[[input$variable]], x = Time)) + geom_point(color = uarpp_colors[1])
    my.plot = my.plot + stat_summary(aes(y = .data[[input$variable]],group=1), fun.y=mean, colour=uarpp_colors[2], geom="line",group=1)
  } else { 
      my.plot = ggplot(dataset(), aes(x = .data[[input$variable]])) + geom_histogram(color = uarpp_colors[3], fill = uarpp_colors[1], alpha=0.7) 
  my.plot = my.plot + ylab("Frequency")
  }
  my.plot = my.plot + plot.theme
  print(my.plot)
})
```

```{r}
#| title: Distribution
plotOutput("Histogram")
```

# By Year

Distribution of the rice quality parameters by year.

```{r}
#| context: server

output$BoxplotYear <- renderPlot({
  
  if (input$variable %in% time_variables){
    
    my.plot = ggplot(dataset(), aes(y = .data[[input$variable]], x = Time, color = Year, group = Year)) + stat_summary(geom = "line", fun.y = mean, color = uarpp_colors[1]) + stat_summary(geom = "point", fun.y = mean, color = uarpp_colors[2])
    
  } else {
    YearData = rice.data %>% select("Year")
    YearDataset = dataset() %>% mutate(YearData)
    my.plot = ggplot(YearDataset, aes(x = Year, y = .data[[input$variable]])) + geom_boxplot(color = uarpp_colors[3], fill = uarpp_colors[1], alpha=0.7) 
    my.plot = my.plot + ylab(as.character(input$variable))  
  }
  
  
  my.plot = my.plot + plot.theme
  print(my.plot)
})
```

```{r}
#| title: Distribution by Year
plotOutput("BoxplotYear")
```

# By Type

Distribution of the rice quality parameters by their type (Pureline or Hybrid).

```{r}
#| context: server

output$BoxplotType <- renderPlot({
  
  if (input$variable %in% time_variables){
    my.plot = ggplot(dataset(), aes(y = .data[[input$variable]], x = Time, color = PurelineHybrid, group = PurelineHybrid)) + stat_summary(geom = "line", fun.y = mean, color = uarpp_colors[1]) + stat_summary(geom = "point", fun.y = mean, color = uarpp_colors[2])
  } else {
      PureLineData = rice.data %>% select("PurelineHybrid")
      PureLineDataset = dataset() %>% mutate(PureLineData)
      my.plot = ggplot(PureLineDataset, aes(x = PurelineHybrid, y = .data[[input$variable]])) + geom_boxplot(color = uarpp_colors[3], fill = uarpp_colors[1], alpha=0.7) 
      my.plot = my.plot + ylab(as.character(input$variable))
  }
  
  my.plot = my.plot + plot.theme
  print(my.plot)
})
```

```{r}
#| title: Distribution by Type
plotOutput("BoxplotType")
```

# By Size

Distribution of the rice quality parameters by their grain size (long or medium).

```{r}
#| context: server

output$BoxplotGrain <- renderPlot({
  
    if (input$variable %in% time_variables){
    my.plot = ggplot(dataset(), aes(y = .data[[input$variable]], x = Time, color = `Grain Size`, group = `Grain Size`)) + stat_summary(geom = "line", fun.y = mean, color = uarpp_colors[1]) + stat_summary(geom = "point", fun.y = mean, color = uarpp_colors[2])
  } else {
    GrainData = rice.data %>% select("Grain Size")
    GrainDataset = dataset() %>% mutate(GrainData)
    my.plot = ggplot(GrainDataset, aes(x = `Grain Size`, y = .data[[input$variable]])) + geom_boxplot(color = uarpp_colors[3], fill = uarpp_colors[1], alpha=0.7) 
    my.plot = my.plot + ylab(as.character(input$variable))
  }
  
  my.plot = my.plot + plot.theme
  print(my.plot)
  
})
```

```{r}
#| title: Distribution by Grain Size
plotOutput("BoxplotGrain")
```

# Clustering

```{r}
#| context: server

output$ClusterAnalysis <- renderPlot({
  res.hclust <- eclust(grouping.data, "hclust", k = input$k)
  fviz_dend(res.hclust, rect = TRUE) + plot.theme # dendrogam
})
```

```{r}
#| title: Clustering by pasting properties
plotOutput("ClusterAnalysis")
```

# PCA

```{r}
#| context: server

output$PCA <- renderPlot({
  res.km <- eclust(grouping.data, "kmeans", nstart = 25, k = input$k) 
  res.km + plot.theme 
})
```

```{r}
#| title: Data vsualization
plotOutput("PCA")
```

